local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Fisch by Zxysynap")
local Section = Window:NewSection("Casting Options")
local player = game:GetService("Players").LocalPlayer
local runService = game:GetService("RunService")
local playerGui = player:WaitForChild("PlayerGui")
local GuiService = game:GetService("GuiService")
local virtualInput = game:GetService("VirtualInputManager")
local isAutoClicking = false
local isAutoClicking1 = false

local function click_this_gui(to_click: GuiObject, offsetX, offsetY)
    if not iswindowactive() then
        repeat task.wait() until iswindowactive()
    end

    local inset = GuiService:GetGuiInset()
    local absoluteSize = to_click.AbsoluteSize
    local offset = {
        x = absoluteSize.X / 2,
        y = absoluteSize.Y / 2
    }

    local x = to_click.AbsolutePosition.X + offset.x + offsetX
    local y = to_click.AbsolutePosition.Y + offset.y + offsetY
    virtualInput:SendMouseButtonEvent(x + inset.X, y + inset.Y, 0, true, game, 0)
    virtualInput:SendMouseButtonEvent(x + inset.X, y + inset.Y, 0, false, game, 0)
end

local function autoClick()
    local shakeUI = playerGui:FindFirstChild("shakeui")
    
    if shakeUI then
        local button = shakeUI.safezone and shakeUI.safezone:FindFirstChild("button")
        
        if button and button:IsA("ImageButton") and isAutoClicking then
            local offsetX = 5
            local offsetY = 0
            click_this_gui(button, offsetX, offsetY)
        end
    end
end

Section:CreateToggle("Auto Shake(Random Click)", function(value)
    isAutoClicking = value
    if value then
        coroutine.wrap(function()
            while isAutoClicking do
                autoClick()
                task.wait(0) -- ปรับค่าตามที่ต้องการ
            end
        end)()
    end
end)

-- Instant Perfect Catch
local isAutoCatch = false
Section:CreateToggle("Instant Perfect Catch", function(value)
    isAutoCatch = value
end)

local function startCatching()
    local reelBar = playerGui:FindFirstChild("reel") and playerGui.reel:FindFirstChild("bar")
    if reelBar and isAutoCatch then
        game:GetService("ReplicatedStorage").events.reelfinished:FireServer(100, true)
    end
end

runService.RenderStepped:Connect(startCatching)

-- Auto Reel Cast
local isAutoCasting = false 
local bodyPosition

local function isRodEquipped()
    return player.Character and player.Character:FindFirstChildWhichIsA("Tool") and player.Character:FindFirstChildWhichIsA("Tool").Name:lower():find("rod")
end

local function equipRod()
    for _, tool in ipairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name:lower():find("rod") then
            player.Character.Humanoid:EquipTool(tool)
            return tool
        end
    end
end

local function reelCasting()
    if isAutoCasting then
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")

        if not bodyPosition then
            bodyPosition = Instance.new("BodyPosition")
            character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
            character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, false)
        end

        local equippedTool = isRodEquipped() and player.Character:FindFirstChildWhichIsA("Tool") or equipRod()

        if equippedTool then
            local castEvent = equippedTool:FindFirstChild("events") and equippedTool.events:FindFirstChild("cast")
            local resetEvent = equippedTool:FindFirstChild("events") and equippedTool.events:FindFirstChild("reset")
            if castEvent then
                castEvent:FireServer(100, 1)
            elseif resetEvent then
                resetEvent:FireServer()
            end
        end
    else
        if bodyPosition then
            character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
            character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, true)
            bodyPosition:Destroy()
            bodyPosition = nil
        end
    end
end

Section:CreateToggle("Auto Reel Cast", function(value)
    isAutoCasting = value
end)

runService.RenderStepped:Connect(reelCasting)

local function autoClick2()
   if isAutoClicking1 then
        local button = playerGui.shakeui.safezone:FindFirstChild("button")
        if button then
            GuiService.SelectedObject = button
            virtualInput:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
            wait(0)
            virtualInput:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        end
    end
end

Section:CreateToggle("Auto Shake(slow)", function(value)
    isAutoClicking1 = value
end)
runService.RenderStepped:Connect(autoClick2())
